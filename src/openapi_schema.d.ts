/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/divisions/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List */
        get: operations["list_divisions__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/divisions/{division_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** By Id */
        get: operations["by_id_divisions__division_id___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/teams/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List */
        get: operations["list_teams__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/teams/{team_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** By Id */
        get: operations["by_id_teams__team_id___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List */
        get: operations["list_games__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{game_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** By Id */
        get: operations["by_id_games__game_id___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/{game_id}/score/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Update Score */
        patch: operations["update_score_games__game_id__score__patch"];
        trace?: never;
    };
    "/games/assign-matchups/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Assign Matchups */
        post: operations["assign_matchups_games_assign_matchups__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/reprocess-all-scores/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Reprocess All Scores */
        post: operations["reprocess_all_scores_games_reprocess_all_scores__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/locations/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List */
        get: operations["list_locations__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/locations/{location_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** By Id */
        get: operations["by_id_locations__location_id___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/seeding-parameters/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List */
        get: operations["list_seeding_parameters__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/seeding-parameters/{seeding_parameter_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** By Id */
        get: operations["by_id_seeding_parameters__seeding_parameter_id___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tournaments/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List */
        get: operations["list_tournaments__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tournaments/{tournament_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** By Id */
        get: operations["by_id_tournaments__tournament_id___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tournament-games/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List */
        get: operations["list_tournament_games__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tournament-games/{tournament_game_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** By Id */
        get: operations["by_id_tournament_games__tournament_game_id___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/visits/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List */
        get: operations["list_visits__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/visits/{visit_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** By Id */
        get: operations["by_id_visits__visit_id___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pages/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Home */
        get: operations["home_pages__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pages/team/{team_slug}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Team */
        get: operations["team_pages_team__team_slug___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pages/schedule/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Schedule */
        get: operations["schedule_pages_schedule__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pages/game/{game_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Game */
        get: operations["game_pages_game__game_id___get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pages/standings/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Standings */
        get: operations["standings_pages_standings__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** DivisionExport */
        DivisionExport: {
            /** Id */
            id: number;
            /** Name */
            name: string;
        };
        /** GameExport */
        GameExport: {
            /** Id */
            id: number;
            /** Round Id */
            round_id: number;
            /** Home Team Id */
            home_team_id: number | null;
            /** Away Team Id */
            away_team_id: number | null;
            /** Officiating Team Id */
            officiating_team_id: number | null;
            /**
             * Datetime
             * Format: date-time
             */
            datetime: string;
            /** Location Id */
            location_id: number | null;
            /** Is Accepting Scores */
            is_accepting_scores: boolean;
            /** Home Team Score */
            home_team_score: number | null;
            /** Away Team Score */
            away_team_score: number | null;
        };
        /** GameIdsAndRounds */
        GameIdsAndRounds: {
            /** Round */
            round: number;
            /** Game Ids */
            game_ids: number[];
        };
        /** GameResponse */
        GameResponse: {
            game: components["schemas"]["GameExport"];
            /** Teams */
            teams: {
                [key: string]: components["schemas"]["TeamExport"];
            };
            location: components["schemas"]["LocationExport"] | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** HomeResponse */
        HomeResponse: {
            /** Games */
            games: {
                [key: string]: components["schemas"]["GameExport"];
            };
            /** Teams */
            teams: {
                [key: string]: components["schemas"]["TeamExport"];
            };
            /** Locations */
            locations: {
                [key: string]: components["schemas"]["LocationExport"];
            };
            /** Game Ids And Rounds */
            game_ids_and_rounds: components["schemas"]["GameIdsAndRounds"][];
            /** Divisions */
            divisions: {
                [key: string]: components["schemas"]["DivisionExport"];
            };
            /** Division Ids Ordered */
            division_ids_ordered: number[];
        };
        /** LocationExport */
        LocationExport: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Link */
            link: string;
            /** Short Name */
            short_name: string;
            /** Time Zone */
            time_zone: string;
        };
        /** ScheduleResponse */
        ScheduleResponse: {
            /** Games */
            games: {
                [key: string]: components["schemas"]["GameExport"];
            };
            /** Teams */
            teams: {
                [key: string]: components["schemas"]["TeamExport"];
            };
            /** Locations */
            locations: {
                [key: string]: components["schemas"]["LocationExport"];
            };
            /** Tournaments */
            tournaments: components["schemas"]["TournamentExport"][];
        };
        /** ScoreUpdate */
        ScoreUpdate: {
            /** Home Team Score */
            home_team_score?: number | null;
            /** Away Team Score */
            away_team_score?: number | null;
        };
        /** SeedingParameterExport */
        SeedingParameterExport: {
            /** Id */
            id: number;
            /** Parameter */
            parameter: string;
            /** Name */
            name: string;
        };
        /** StandingsResponse */
        StandingsResponse: {
            /** Teams */
            teams: {
                [key: string]: components["schemas"]["TeamExport"];
            };
        };
        /** TeamExport */
        TeamExport: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Division Id */
            division_id: number | null;
            /** Slug */
            slug: string;
            /** Color */
            color: string | null;
        };
        /** TeamResponse */
        TeamResponse: {
            /** Games */
            games: {
                [key: string]: components["schemas"]["GameExport"];
            };
            /** Teams */
            teams: {
                [key: string]: components["schemas"]["TeamExport"];
            };
            /** Locations */
            locations: {
                [key: string]: components["schemas"]["LocationExport"];
            };
            /** Games Known Ids */
            games_known_ids: number[];
            /** Games Unknown Ids */
            games_unknown_ids: number[];
            /** Team Id */
            team_id: number;
            division: components["schemas"]["DivisionExport"];
            /** Featured Game Id */
            featured_game_id: number | null;
        };
        /** TournamentExport */
        TournamentExport: {
            /** Id */
            id: number;
            /** Name */
            name: string;
        };
        /** TournamentGameExport */
        TournamentGameExport: {
            /** Game Id */
            game_id: number;
            /** Tournament Id */
            tournament_id: number | null;
            /** Bracket Id */
            bracket_id: number;
            /** Round */
            round: number;
            /** Home Team Filler */
            home_team_filler?: string | null;
            /** Away Team Filler */
            away_team_filler?: string | null;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** VisitExport */
        VisitExport: {
            /** Id */
            id: number;
            /**
             * Datetime
             * Format: date-time
             */
            datetime: string;
            /** Path */
            path: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    list_divisions__get: {
        parameters: {
            query?: {
                /** @description Quantity of results */
                limit?: number;
                /** @description Index of the first result */
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DivisionExport"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    by_id_divisions__division_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                division_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DivisionExport"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_teams__get: {
        parameters: {
            query?: {
                /** @description Quantity of results */
                limit?: number;
                /** @description Index of the first result */
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TeamExport"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    by_id_teams__team_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                team_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TeamExport"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_games__get: {
        parameters: {
            query?: {
                /** @description Quantity of results */
                limit?: number;
                /** @description Index of the first result */
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameExport"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    by_id_games__game_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                game_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameExport"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_score_games__game_id__score__patch: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                game_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScoreUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameExport"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    assign_matchups_games_assign_matchups__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    reprocess_all_scores_games_reprocess_all_scores__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    list_locations__get: {
        parameters: {
            query?: {
                /** @description Quantity of results */
                limit?: number;
                /** @description Index of the first result */
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocationExport"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    by_id_locations__location_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                location_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LocationExport"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_seeding_parameters__get: {
        parameters: {
            query?: {
                /** @description Quantity of results */
                limit?: number;
                /** @description Index of the first result */
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SeedingParameterExport"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    by_id_seeding_parameters__seeding_parameter_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                seeding_parameter_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SeedingParameterExport"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_tournaments__get: {
        parameters: {
            query?: {
                /** @description Quantity of results */
                limit?: number;
                /** @description Index of the first result */
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TournamentExport"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    by_id_tournaments__tournament_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                tournament_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TournamentExport"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_tournament_games__get: {
        parameters: {
            query?: {
                /** @description Quantity of results */
                limit?: number;
                /** @description Index of the first result */
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TournamentGameExport"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    by_id_tournament_games__tournament_game_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                tournament_game_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TournamentGameExport"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_visits__get: {
        parameters: {
            query?: {
                /** @description Quantity of results */
                limit?: number;
                /** @description Index of the first result */
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VisitExport"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    by_id_visits__visit_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                visit_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VisitExport"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    home_pages__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HomeResponse"];
                };
            };
        };
    };
    team_pages_team__team_slug___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                team_slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TeamResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    schedule_pages_schedule__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ScheduleResponse"];
                };
            };
        };
    };
    game_pages_game__game_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                game_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    standings_pages_standings__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["StandingsResponse"];
                };
            };
        };
    };
}
